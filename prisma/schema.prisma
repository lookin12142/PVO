generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./pos.db"
}

// =======================
// CATEGORÍAS
// =======================
model Category {
  id        String           @id @default(cuid())
  name      String           @unique
  prices    CategoryPrice[]
  summaries CashClosureCategorySummary[]

  @@map("categories")
}

// =======================
// PRODUCTOS (solo nombre y descripción, sin precio)
// =======================
model Product {
  id          String           @id @default(cuid())
  name        String
  code        String?           // código opcional (para buscar rápido)
  description String?
  createdAt   DateTime         @default(now())

  prices      CategoryPrice[]
  sales       SaleDetail[]

  @@map("products")
}

// ===========================
// PRODUCTO + CATEGORÍA + PRECIO
// ===========================
model CategoryPrice {
  id         String   @id @default(cuid())
  productId  String
  categoryId String
  price      Float
  createdAt  DateTime @default(now())

  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([productId, categoryId])  // un producto solo puede tener un precio por categoría
  @@map("category_prices")
}

// ===========================
// INGRESOS / EGRESOS DE CAJA
// ===========================
model CashMovement {
  id        String   @id @default(cuid())
  type      String   // 'ingreso' o 'egreso'
  amount    Float
  note      String?  // descripción como "compra de insumos"
  createdAt DateTime @default(now())

  @@map("cash_movements")
}

// ===============
// VENTAS
// ===============
model Sale {
  id          String   @id @default(cuid())
  clientName  String?
  total       Float
  discount    Float?   // descuento general aplicado (% o valor)
  type        String   // 'presencial' o 'rappi'
  createdAt   DateTime @default(now())

  details     SaleDetail[]

  @@map("sales")
}

// ====================
// DETALLES DE VENTA
// ====================
model SaleDetail {
  id               String   @id @default(cuid())
  saleId           String
  categoryPriceId  String   // producto + categoría + precio
  quantity         Int
  price            Float    // precio aplicado (puede venir con descuento)
  discount         Float?   // descuento individual aplicado

  sale             Sale             @relation(fields: [saleId], references: [id], onDelete: Cascade)
  categoryPrice    CategoryPrice    @relation(fields: [categoryPriceId], references: [id])

  @@map("sale_details")
}

// =====================
// CIERRE DE CAJA
// =====================
model CashClosure {
  id            String   @id @default(cuid())
  totalInSystem Float
  totalPhysical Float
  difference    Float
  createdAt     DateTime @default(now())

  summaries     CashClosureCategorySummary[]

  @@map("cash_closures")
}

// ==============================
// RESUMEN POR CATEGORÍA EN CIERRE
// ==============================
model CashClosureCategorySummary {
  id            String   @id @default(cuid())
  cashClosureId String
  categoryId    String
  total         Float

  cashClosure   CashClosure @relation(fields: [cashClosureId], references: [id], onDelete: Cascade)
  category      Category    @relation(fields: [categoryId], references: [id])

  @@unique([cashClosureId, categoryId])
  @@map("cash_closure_category_summary")
}
